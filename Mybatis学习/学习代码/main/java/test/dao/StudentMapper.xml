<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 注意配置namespace的路径 注明绑定的是哪个接口   -->
<mapper namespace="test.dao.StudentMapper">

    <!--在当前mapper.xml中使用二级缓存，二级缓存只对同一个mapper有用-->
    <cache
        eviction="FIFO"
        flushInterval="60000"
        size="512"
        readOnly="true"></cache>

    <!-- select查询语句  -->
    <!-- id 是 注明绑定的是接口的哪个方法 resultType注明返回数据的类，这里是student类 -->
    <!-- 查询全部学生 -->
    <select id="getStudentList" resultType="student">
        select * from school.student
    </select>
    
<!--    <resultMap id="sMapper" type="student">-->
<!--        <result column="password" property="psw"></result>-->
<!--    </resultMap>-->
    
    <!--根据id查询学生-->
    <select id="getStudentById" parameterType="int" resultType="student">
        select * from school.student where id = #{id}
    </select>
    <!--插入一个学生-->
    <!--对象中的属性可以直接取出来-->
    <insert id="InsertStudent" parameterType="test.pojo.student" >
        insert into school.student (id,`name`,password,sex,birthday,address,email)
        values (#{id},#{name},#{password},#{sex},#{birthday},#{address},#{email});
    </insert>
    <!--修改一个学生信息-->
    <!--对象中的属性可以直接取出来-->
    <update id="updateStudent" parameterType="test.pojo.student">
        update school.student
        set `name` = #{name},
            password=#{password},
            sex = #{sex}
        where id = #{id};
    </update>
    <!--删除一个学生的信息-->
    <delete id="deleteStudent" parameterType="int">
        delete from school.student where id=#{id};
    </delete>

    <!--分页查询学生信息-->
    <select id="getStudentByPage" parameterType="map" resultType="test.pojo.student">
        select * from student limit #{startpoint},#{page};
    </select>
</mapper>